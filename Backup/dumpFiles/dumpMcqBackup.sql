-- MySQL dump 10.13  Distrib 5.5.28, for Linux (i686)
--
-- Host: localhost    Database: dbRaman
-- ------------------------------------------------------
-- Server version	5.5.28

/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;

--
-- Table structure for table `mcqBackup`
--

DROP TABLE IF EXISTS `mcqBackup`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `mcqBackup` (
  `ques` varchar(1000) DEFAULT NULL,
  `opt1` varchar(1000) DEFAULT NULL,
  `opt2` varchar(1000) DEFAULT NULL,
  `opt3` varchar(1000) DEFAULT NULL,
  `opt4` varchar(1000) DEFAULT NULL,
  `quesId` int(11) DEFAULT NULL,
  `correct` int(11) DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=latin1;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `mcqBackup`
--

LOCK TABLES `mcqBackup` WRITE;
/*!40000 ALTER TABLE `mcqBackup` DISABLE KEYS */;
INSERT INTO `mcqBackup` VALUES ('What is byte code in the context of Java ?','The type of code generated by a Java compiler','The type of code generated by a Java Virtual Machine','It is another name for a Java source file','It is the code written within the instance methods of a class.',1,1),('What is garbage collection in the context of Java?','The operating system periodically deletes all of the java files available on the system.','Any package imported in a program and not used is automatically deleted.','When all references to an object are gone, the memory used by the object is automatically reclaimed','The JVM checks the output of any Java program and deletes anything that does not make sense.',2,3),('You read the following statement in a Java program that compiles and executes.\n\nsubmarine.dive(depth);\n\nWhat can you say for sure ?','submarine must be the name of a class','dive must be a method.','Both A and B','None of the Above',3,3),('When method defined in subclass which has same signature as a method in a super class, it is known as method','Overloading ','Overriding','Packing ','none of these',4,2),('A class that cannot be a subclass is known as ','abstract ','parent class ','Final ','none of these',5,3),('When several threads act on object simultaneously and the result is reliable then it is known as ','Boxing ','synchronized ','Unsynchronized ','All of the above',6,2),('What is the return type of Constructors?','int','float','void','None of the above',7,4),('Which keyword is used by method to refer to the object that invoked it?','import','this','abstract','catch',8,2),('Which of the following is a method having same name as that of its class?','finalize','delete','class','constructor',9,4),('Which operator is used by Java run time implementations to free the memory of an object when it is no longer needed?','delete','free','new','None of the above',10,4),('Which function is used to perform some action when the object is to be destroyed?','finalize()','delete()',' main()','None of the Above',11,1),('        class box {\n\n            int width;\n\n            int height;\n\n            int length;\n\n            int volume;\n\n            box(int w, int h, int l) {\n\n                width = w;\n\n                height = h;\n\n                length = l;\n\n            }\n\n            void volume() {\n\n                 volume = width*height*length;\n\n            } \n\n        }    \n\n        class constructor_output {\n\n            public static void main(String args[])\n\n            {\n\n                box obj = new box();\n\n                obj.volume();\n\n                System.out.println(obj.volume);        } \n\n            }\n\n       }','0','Any Random Value','Compile Time Error','Run Time Error',12,3),('What is the output of this program?\n\n        class equality {\n\n            int x;\n\n            int y;\n\n            boolean isequal() {\n\n                return(x == y);  \n\n            } \n\n        }    \n\n        class Output {\n\n            public static void main(String args[])\n\n            {\n\n                equality obj = new equality();\n\n                obj.x = 5;\n\n                obj.y = 5;\n\n                System.out.println(obj.isequal);        } \n\n        }','false','true','0','1',13,2),('What are the pillars of OOPS concept?','Abstraction, Inheritance, Encapsulation, Polymorphism','Atomicity, Inheritance, Encapsulation, Polymorphism',' Abstraction, Inheritance, Polymorphism','None of the Above',14,1),('Which of these keyword must be used to inherit a class?','super','this','extent','extends',15,4),('Which of these keywords is used to refer to member of base class from a sub class?','upper','super','this','None of the mentioned',16,2),('Which of these is correct way of inheriting class A by class B?','class B + class A {}','class B inherits class A{}','class B extends A {}','class B extends class A {}',17,3),('Which of the following statements are incorrect?','public members of class can be accessed by any code in the program.','private members of class can only be accessed by other members of the class.','private members of class can be inherited by a sub class, and become public members in sub class.','None of the Above',18,3),(' What is the output of this program?\n\n        class A {\n\n            int i;\n\n            void display() {\n\n                System.out.println(i);\n\n            }\n\n        }    \n\n        class B extends A {\n\n            int j;\n\n            void display() {\n\n                System.out.println(j);\n\n            }\n\n        }    \n\n        class inheritance_demo {\n\n            public static void main(String args[])\n\n            {\n\n                B obj = new B();\n\n                obj.i=1;\n\n                obj.j=2;   \n\n                obj.display();     \n\n            }\n\n       }','0','1','2','Compilation Error',19,3),('What is the output of this program?\n\n        class A {\n\n            int i;\n\n        }    \n\n        class B extends A {\n\n            int j;\n\n            void display() {\n\n                super.i = j + 1;\n\n                System.out.println(j + \" \" + i);\n\n            }\n\n        }    \n\n        class inheritance {\n\n            public static void main(String args[])\n\n            {\n\n                B obj = new B();\n\n                obj.i=1;\n\n                obj.j=2;   \n\n                obj.display();     \n\n            }\n\n       }','2   2','3   3','2   3','3   2',20,3),('What is the output of this program?\n\n        class A {\n\n            public int i;\n\n            private int j;\n\n        }    \n\n        class B extends A {\n\n            void display() {\n\n                super.j = super.i + 1;\n\n                System.out.println(super.i + \" \" + super.j);\n\n            }\n\n        }    \n\n        class inheritance {\n\n            public static void main(String args[])\n\n            {\n\n                B obj = new B();\n\n                obj.i=1;\n\n                obj.j=2;   \n\n                obj.display();     \n\n            }\n\n       }','2   2','3   3','Runtime Error','Compilation Error',21,4),(' What is the output of this program?\n\n        class A {\n\n            public int i;\n\n            public int j;\n\n            A() {\n\n                i = 1;\n\n                j = 2;\n\n                }\n\n        }    \n\n        class B extends A {\n\n            int a;\n\n            B() {\n\n                \n\n            } \n\n        }    \n\n        class super_use {\n\n            public static void main(String args[])\n\n            {\n\n                B obj = new B();\n\n                System.out.println(obj.i + \" \" + obj.j)     \n\n            }\n\n       }','1  2','2  1','Runtime Error','Compilation Error',22,1),('What type of inheritance does Java have?','single inheritance','double inheritance ','multiple inheritance','class inheritance ',23,1),('Say that there are three classes: \nComputer, \nAppleComputer, \nand IBMComputer. \n\nWhat are the likely relationships between these classes','Computer is the superclass, AppleComputer and IBMComputer are subclasses of Computer.','IBMComputer is the superclass, AppleComputer and Computer are subclasses of IBMComputer. ','Computer, AppleComputer and IBMComputer are sibling classes. ',' Computer is a superclass, AppleComputer is a subclasses of Computer, and IBMComputer is a sublclas of AppleComputer ',24,1),('Can an object be a subclass of another object?',' Yes---as long as single inheritance is followed. ','No---inheritance is only between classes','Only when one has been defined in terms of the other. ','Yes---when one object is used in the constructor of another.',25,2),('How many objects of a given class can there be in a program?','One per defined class. ','One per constructor definition. ','As many as the program needs. ','One per main() method. ',26,3),('What restriction is there on using the super reference in a constructor?',' It can only be used in the parent constructor. ','Only one child class can use it.',' It must be used in the last statement of the constructor. ','It must be used in the first statement of the constructor. ',27,4),('Which of the following is correct syntax for defining a new class Jolt based on the superclass SoftDrink?','class Jolt isa SoftDrink { //additional definitions go here } ','class Jolt implements SoftDrink { //additional definitions go here } ','class Jolt defines SoftDrink { //additional definitions go here } ','class Jolt extends SoftDrink { //additional definitions go here } ',28,4),(' A class Car and its subclass Yugo both have a method run() which was written by the programmer as part of the class definition.\n If junker refers to an object of type Yugo, what will the following code do?\n\n    junker.show();\n\n','The show() method defined in Yugo will be called. ','The show() method defined in Car will be called. ','The compiler will complain that run() has been defined twice. ',' Overloading will be used to pick which run() is called. ',29,1),('A class Animal has a subclass Mammal. Which of the following is true','Because of single inheritance, Mammal can have no subclasses.','Because of single inheritance, Mammal can have no other parent than Animal. ','Because of single inheritance, Animal can have only one subclass. ','Because of single inheritance, Mammal can have no siblings',30,2),('Does a subclass inherit both member variables and methods?','No--only member variables are inherited. ','No--only methods are inherited. ','Yes--both are inherited. ','Yes--but only one or the other are inherited. ',31,3),('Which of the following is NOT an advantage to using inheritance?','Code that is shared between classes needs to be written only once. ','Similar classes can be made to behave consistently. ','Enhancements to a base class will automatically be applied to derived classes. ','One big superclass can be used instead of many little classes. ',32,4),('For the following code\n\nclass A{\nabstract Set(){}\nvoid Get(){}\n}\n\nWhat is the nature of Class A ?','Its a concrete class','Its a abstract class','Both A and B','None of the Above',33,2),('Which of the following statements are true','An Abstract class can have abstract and non abstract methods','If a class is having one abstract method then the class itself become abstract','Both A and B','None of the Above',34,3),('How do you achieve multiple inheritance in Java?','Inheriting two super classes in one  subclass ','using interfaces','Not possible at all','None of the above',35,2),('Can variables be declared in an interface ?','Yes, but the nature wil be final and static','No','Yes, but the nature will not be final and static','None of the Above',36,1),('Which of the statements are true? ','Overridden methods have the same method name and signature ','Overloaded methods have the same method name and signature ','Overridden methods have the same method name and different signature ','Both B and C',37,1),('What are the ways to create threads in Java','Implementing Runnable interface','Inheriting Thread Class','Both A and B','Thread are not possible in Java',38,3),('What is the name of the method used to start a thread execution?','init()','start()','run()','resume()',39,2),('Which two are valid constructors for Thread? \n\n1) Thread(Runnable r, String name)\n2) Thread()\n3) Thread(int priority)\n4) Thread(Runnable r, ThreadGroup g)\n5) Thread(Runnable r, int priority)','1 and 3','2 and 4','1 and 2','2 and 5',40,3),('\n\nclass X implements Runnable \n{ \n    public static void main(String args[]) \n    {\n        /* Missing code? */\n    } \n    public void run() {} \n}\n\n Which of the following line of code is suitable to start a thread ?','Thread t = new Thread(X);','Thread t = new Thread(X); t.start();','X run = new X(); Thread t = new Thread(run); t.start();','Thread t = new Thread(); x.run();',41,3),('Which two of the following methods are defined in class Thread? \n\n\n   1)  start()\n   2)  wait()\n   3)  notify()\n   4)  run()\n   5)  terminate()\n','1 and 4','2 and 3','3 and 4','2 and 4',42,1),('Which method must be defined by a class implementing the java.lang.Runnable interface?','void run()','public void run()','public void start()','void run(int priority)',43,2),('Which will contain the body of the thread?','run();','start();','stop();','main();',44,1),('public class MyRunnable implements Runnable \n{\n    public void run() \n    {\n        // some code here\n    }\n}\n\nwhich of these will create and start this thread?','new Runnable(MyRunnable).start()','new Thread(MyRunnable).run()','new Thread(new MyRunnable()).start()','new MyRunnable().start()',45,3),('Which of the following can add a row to a table? ','Add ',' Insert ','Update ','Alter',46,2),('Using which command user can add new column to the mysql table','Alter table','update table','create table','None of the Above',47,1),(' What SQL clause is used to restrict the rows returned by a query? ',' AND','WHERE ','HAVING ','FROM ',48,2),('A SELECT command without a WHERE clause returns?\n','All the records from a table that match the previous WHERE clause','All the records from a table','SELECT is invalid without a WHERE clause ','Nothing ',49,2),('Which is the method that starts the applet ? \n','main()','destroy()','init()','repaint()',50,3),('Which of these functions is called to display the output of an applet?','display()','paint()','displayApplet()','PrintApplet()',51,2),('Which of these methods can be used to output a sting in an applet?','display()','print()','drawString()','transient()',52,3),('What does AWT stands for ?','All Window Tools','All Writing Tools','Abstract Window Toolkit','Abstract Writing Toolkit',53,3),('Which of these methods is a part of Abstract Window Toolkit (AWT) ?','display()','paint()','drawString()',' transient()',54,2),('What is the Message is displayed in the applet made by this program?\n\n        import java.awt.*;\n\n        import java.applet.*;\n\n        public class myapplet extends Applet {\n\n            public void paint(Graphics g) {\n\n                g.drawString(\"A Simple Applet\", 20, 20);    \n\n            }\n\n        }','A Simple Applet','A Simple Applet 20 20',' Compilation Error','Runtime Error',55,1),('Which of these method can be used to make the remaining part of main thread to be executed \nafter threads terminates?','stop()','sleep()','join()','call()',56,3),('Which of these method is used to find out that a thread is still running or not?','run()','Alive()','isAlive()','checkRun()',57,3),('What is the default value of priority variable MIN_PRIORITY AND MAX_PRIORITY?','0 & 256','0 & 1','1 & 10','1 & 256',58,3),(' Which of these method is used to explicitly set the priority of a thread?','set()','make()','setPriority()','makePriority()',59,3),('What is synchronization in reference to a thread?','It is a process of handling situations when two or more threads need access to a shared resource.',' Its a process by which many thread are able to access same shared resource simultaneously.','Its a process by which a method is able to access many different threads simultaneously.','Its a method that allow to many threads to access any information require.',60,1),('What is the output of this program?\n\n        class newthread extends Thread {\n\n    	newthread() {\n\n    	    super(\"My Thread\");\n\n    	    start();\n\n    	}\n\n    	public void run() {\n\n    	    System.out.println(this);\n\n    	}\n\n        }\n\n        class multithreaded_programing {\n\n            public static void main(String args[]) {\n\n                new newthread();        \n\n            }\n\n        }','My Thread','Thread[My Thread,5,main]','Compilation Error','Runtime Error',61,2);
/*!40000 ALTER TABLE `mcqBackup` ENABLE KEYS */;
UNLOCK TABLES;
/*!40103 SET TIME_ZONE=@OLD_TIME_ZONE */;

/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
/*!40111 SET SQL_NOTES=@OLD_SQL_NOTES */;

-- Dump completed on 2014-08-06 17:21:33
